<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.km.chat.dao.ChatDAO">
	<resultMap type="com.km.chat.model.dto.ChatLogDTO" id="chatLogResultMap">
		<id property="chatNo" column="CHAT_NO"/>
		<result property="chatCode" column="CHAT_CODE"/>
		<result property="chatContents" column="CHAT_CONTENTS"/>
		<result property="chatTime" column="CHAT_TIME"/>
		<result property="frEmail" column="FR_EMAIL"/>
		<result property="myEmail" column="MY_EMAIL"/>
	</resultMap>

	<select id="selectChat" parameterType="string" resultType="hashmap">
		SELECT
			   C.CHAT_CODE
			 , C.EMAIL
			 , M.NICKNAME
			 , M.PROFILE_PATH
		  FROM chat_tbl C
		  JOIN member_tbl M on(C.EMAIL = M.EMAIL)
		 WHERE CHAT_CODE IN (
		 	SELECT CHAT_CODE FROM chat_tbl WHERE EMAIL = #{ email }
		 )
		   and C.EMAIL != #{ email }
	</select>
	
	<select id="selectLikedFR" parameterType="string" resultType="string">
		SELECT
			   LIKED_EMAIL
		  FROM likedfreinds_tbl
		 WHERE EMAIL =  #{ email }
	</select>
	
	<select id="selectChatLog" resultMap="chatLogResultMap">
		SELECT
			   CHAT_NO 
			 , CHAT_CONTENTS
			 , CHAT_TIME
			 , CHAT_CODE
			 , FR_EMAIL
			 , MY_EMAIL 
		  FROM chat_log_tbl 
		 WHERE CHAT_CODE = #{ chatCode }
		 ORDER BY CHAT_TIME
	</select>
	
	<insert id="insertChat">
		INSERT
		  INTO chat_log_tbl
		(
		  CHAT_NO
		, CHAT_CONTENTS
		, CHAT_TIME
		, CHAT_CODE
		, FR_EMAIL
		, MY_EMAIL
		)
		VALUES
		(
		  null
		, #{ chatContents }
		, NOW()
		, #{ chatCode }
		, #{ frEmail }
		, #{ myEmail }
		)
	</insert>
	
	<select id="selectBlockedFR" resultType="string">
		SELECT
			   BLOCKED_EMAIL
		  FROM blocked_tbl
		 WHERE BLOCKED_EMAIL =  #{ email }
	</select>
	
	<insert id="insertChatCodeMy" parameterType="hashmap">
		INSERT
		  INTO chat_tbl
		(
		  CHAT_CODE
		, CHAT_TYPE
		, EMAIL
		)
		VALUES
		(
		  nextVal('chat_seq')
		, 'one'
		, #{ myEmail }
		)
	</insert>

	<insert id="insertChatCodeFr" parameterType="hashmap">
		INSERT
		  INTO chat_tbl
		(
		  CHAT_CODE
		, CHAT_TYPE
		, EMAIL
		)
		VALUES
		(
		  (select currval from sequences where name = 'chat_seq')
		, 'one'
		, #{ frEmail }
		)
	</insert>
	
	<select id="checkChatCode" parameterType="hashmap" resultType="_int">
		SELECT
			   COUNT(*)
		  FROM chat_tbl
		 WHERE EMAIL = #{ frEmail }
		   AND CHAT_CODE IN (SELECT CHAT_CODE FROM chat_tbl WHERE EMAIL = #{ myEmail })
	</select>
</mapper>